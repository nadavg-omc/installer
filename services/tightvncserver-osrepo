#!/bin/bash

if [ -f "include/startup.sh" ]; then
    . include/startup.sh
elif [ -f "../include/startup.sh" ]; then
    . ../include/startup.sh
fi

rootDir=$(rootDir)

echo "Installing VNC service" | log
installPackage tightvncserver
waitOrStop 0 "Failed apt install: tightvncserver"

echo "Creating Default VNC Session" | log
export HOME=/root
export USER=root
mkdir -p  $HOME/.vnc/
VNC_PASSWORD="$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 8 ; echo '')"
echo ${VNC_PASSWORD}| vncpasswd -f > $HOME/.vnc/passwd
chmod 0700 $HOME/.vnc/passwd
vncserver
vncserver -kill :1

echo "Fixing VNC Cursor" | log
sed -i 's/xsetroot/& -cursor_name left_ptr/' $HOME/.vnc/xstartup

echo "Fixing VNC Session" | log
sed -i '/XKL_XMODMAP_DISABLE/d'  $HOME/.vnc/xstartup
echo "export XKL_XMODMAP_DISABLE=1" >> $HOME/.vnc/xstartup

echo "Creating VNC start-up daemon" | log
cat > /etc/systemd/system/vncserver@.service  << EOF
[Unit]
Description=Start TightVNC server at startup
After=syslog.target network.target

[Service]
Type=forking
User=root
Group=root
WorkingDirectory=${HOME}

PIDFile=${HOME}/.vnc/%H:%i.pid
ExecStartPre=-/usr/bin/vncserver -kill :%i > /dev/null 2>&1
ExecStart=/usr/bin/vncserver -depth 24 -geometry 1600x900 :%i
ExecStop=/usr/bin/vncserver -kill :%i

[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reload
waitOrStop 0 "Reload systemctl failed"
systemctl enable vncserver@1.service
systemctl start vncserver@1
waitOrStop 0 "Starting vncserver service failed"

echo "Adding descriptions" | log
descriptionAppend "Connect using VNC Client"
descriptionAppend " "
descriptionAppend "VNC GUI Address: ${CWM_DISPLAYED_ADDRESS}:5901"
descriptionAppend "VNC Password: ${VNC_PASSWORD}"
descriptionAppend " "
descriptionAppend "SSH Console Address: ${CWM_DISPLAYED_ADDRESS}"
descriptionAppend "Username: root"
descriptionAppend "Password: ${ADMINPASSWORD}"
descriptionAppend " "


tagScript success

exit 0
